* What happens when you initialize a repository? Why do you need to do it?
- New directory is created named .git that contains history of commits.
  To initialize .git directory that contains necessary files.

* How is the staging area different from the working directory and the repository? What value do you think it offers?
- Staging area is an abstract layer between working directory and repository.
  It helps to separate commits and manage what you want to commit.

* How can you use the staging area to make sure you have one commit per logical change?
- First we add files related to one logical change to stage area and commit them.
  Then we add other files related to another logical change to stage area and commit them.
  And so on.

* How do the diagrams help you visualize the branch structure?
- Diagrams show child-parent relationships of commits, so we can see the branch structure.

* What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
- The result is one branch contains commits of two branches.
  To see the branch structure!

* What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
- pros:
  You don't need to compaire files and specify how to merge them
  cons:
  Automatic merge may merge your files incorrect and distroy your program logic.

  